<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_bad0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_generic_bad</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description object properties
// object: o_bad0

// inherit create from o_generic
event_inherited();

/*
 * --- Bullet Cooldown ---
 */
bullet_cooldown = room_speed / 2;
alarm[0] = bullet_cooldown;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description bullet cooldown alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///@description state processing

// inherit step from o_generic
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description take damage

health -= 1

// delete bullet
with other
    {
    instance_destroy();
    }
    
// change state    
state = HIT;

// calc push back
var dir = other.direction;
spd_push[0] = lengthdir_x( 8, dir );
spd_push[1] = lengthdir_y( 8, dir );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///@description TAKE DAMAGE state

// inherit  from o_generic
event_inherited();

// calc push
// TODO rework move_push script
//move( spd_push );
spd_push[0] = lerp( spd_push[0], 0, 0.1 );
spd_push[1] = lerp( spd_push[1], 0, 0.1 );

if( point_distance( 0, 0, spd_push[0], spd_push[1] ) &lt; 1 )
    {
    state = MOVEMENT
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///@description ATTACK state

// inherit  from o_generic
event_inherited();

if ( instance_exists( o_player ) )
    {

    // TODO set max distance as some enum/constant
    if( distance_to_object( o_player ) &gt;= 48 )    
        {
        state_ = MOVEMENT;
        }
    
    if ( alarm[0] &lt;= 0 )
        {
        var dir = point_direction( x, 0, o_player.x, 0 );
    
        var x_offset = lengthdir_x( 10, dir );
        var y_offset = sprite_height / 2;
    
        var bullet = instance_create( x + x_offset, y - y_offset, o_bullet ); 
        bullet.direction = dir;    
                
        // reset cooldown
        alarm[0] = bullet_cooldown;
        }
        
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description MOVE state

// inherit MOVE from o_generic
event_inherited();

// check if player exists in room
if( instance_exists( o_player ) &amp;&amp; distance_to_object( o_player ) &gt;= 48 )
    {   
    state_ = ATTACK;
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description
// object: o_bad0

// inherit draw from o_generic
event_inherited();

var dir = point_direction( x, y-sprite_height/2, o_player.x, o_player.y );
var flipped = ( x &gt; o_player.x ) * 2 - 1;

draw_sprite_ext( s_bad0, 
                image_index, 
                x, 
                ceil(y), 
                x_scale_ * flipped, 
                y_scale_, 
                0, 
                image_blend, 
                image_alpha );

// figure out which direction the player is in relation to character
// TODO integrate with player object
//var dir  = point_direction( x, y - sprite_height / 2, [player_x], [player_y] );
//var flip = ( [player_x] &gt; x ) * 2 - 1;
//draw_sprite_ext( sp_bad0, image_index, x, ceil(y), o_x_scale * flipped, o_y_scale, 0, image_blend, image_alpha );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
