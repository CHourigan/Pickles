<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_placeholder0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_generic_bad</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description object properties
// object: o_flyer0

// inherit create from o_generic
event_inherited();

/*
 * --- User-Defined Types ---
 */
LEFT_               = -1;
RIGHT_              = 1;
 
 
/*
 * --- User-Defined Variables ---
 */
bullet_range_       = 48;       // range target must be in to fire
damage_val          = 1;
direction_          = 1;

spd[h]              = 2;        // starting horizontal speed

max_speed_          = 5;

/*
 * --- Bullet Cooldown ---
 */
bullet_cooldown = room_speed;
alarm[0] = bullet_cooldown;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description bullet cooldown alarm
// object: o_flyer0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///@description STEP processing
// object: o_flyer0

// inherit step from o_generic
event_inherited();

/*
// check if we're about to hit the edge
if( !place_meeting( x + ( direction_ * speed_[h] ), y, o_solid) )
    {    
    // left is defined to -1, right is 1
    // so if we multiply by -1 we swap directions
    // TODO: figure a better way to do this (macro erxpression?)
    direction_ = direction_ * -1;
    speed_[h] = 0;
    }
else
    {
    speed_[h] = clamp( speed_[h], -max_speed_, max_speed_ );
    x += sign( speed_[h] );  
    }
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description take damage
// object: o_flyer0

health -= damage_val

// delete bullet
with other
    {
    instance_destroy();
    }
    
// change state    
state = HIT;

// calc push back
var dir = other.direction;
spd_push[0] = lengthdir_x( 8, dir );
spd_push[1] = lengthdir_y( 8, dir );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///@description TAKE DAMAGE state
// object: o_flyer0

// inherit  from o_generic
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///@description ATTACK state
// object: o_flyer0

// inherit  from o_generic
event_inherited();

/*
 * --- Main Process ---
 */
if ( instance_exists( o_player ) )
    {    
    // if cooldown is finished, shoot
    if ( alarm[0] &lt;= 0 )
        {
        // enemy just shoots down, so our point direction doesn't look at x
        var dir = point_direction( 0, y, 0, o_player.y );
    
        var x_offset = sprite_width / 2; //lengthdir_x( 1, dir );
        var y_offset = 0; //sprite_height / 2;
    
        var bullet = instance_create( x - x_offset, y - y_offset, o_bullet ); 
        bullet.direction = 270;//180;    
                
        // reset cooldown
        alarm[0] = bullet_cooldown;
        }   
    }    
state_ = MOVEMENT
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description MOVE state
// object: o_flyer0

is_gravity = false;     // this is a flying object, so no gravity

// inherit MOVE from o_generic
event_inherited();

// check if player exists in room and we're in range
if( instance_exists( o_player ) )
    {    
    // determine how fast we want to go vertically &amp; horizontally
    spd[v] = 0;
    
    // check if we're about to hit the edge
    if( place_meeting( x + direction_, y, o_solid) )
        {    
        // left is defined to -1, right is 1
        // so if we multiply by -1 we swap directions
        // TODO: figure a better way to do this (macro erxpression?)
        direction_ = direction_ * -1;
        spd[h] = 2 * direction_;
        }
    
    move_ext( spd );
            
    // calc death
    /*
    if( o_health &lt;= 0 )
        {
        instance_destroy();
        }
    */
        
    // check if needed to change state    
    if( alarm[0] &lt;= 0 )    
        {
        state_ = ATTACK;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// @description draw procedure
// object: o_flyer0

// inherit draw from o_generic
event_inherited();

/*
 * --- Main Process ---
 */
var dir = point_direction( x, y-sprite_height/2, o_player.x, o_player.y );
var flipped = ( x &gt; o_player.x ) * 2 - 1;

draw_sprite_ext( s_placeholder0, 
                image_index, 
                x, 
                ceil(y), 
                x_scale_ * flipped, 
                y_scale_, 
                0, 
                image_blend, 
                image_alpha ); 

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
