<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player_idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create the Variables
hspeed_ = 0;
vspeed_ = 0;
gravity_ = 1;
acceleration_ = 1;
jump_height_ = -13;
max_hspeed_ = 4;
friction_ = .3;
flipped_ = 1;
state_ = "idle";

//Map of the keys
keyboard_set_map(ord("D"), vk_right);
keyboard_set_map(ord("A"), vk_left);
keyboard_set_map(ord("S"), vk_down);
keyboard_set_map(ord("W"), vk_up);

//Bullet Cooldown
bullet_cooldown_ = room_speed/10;
alarm[0] = bullet_cooldown_;

x_scale_ = image_xscale;
y_scale_ = image_yscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bullet alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var hinput = keyboard_check(vk_right) - keyboard_check(vk_left);

if hinput != 0 {
    hspeed_ += hinput*acceleration_;
    hspeed_ = clamp(hspeed_, -max_hspeed_, max_hspeed_);
    flipped_ = hinput;
    state_ = "move";
    image_speed = .3;
} else {
    hspeed_ = lerp( hspeed_, 0, friction_);
    state_ = "idle";
    if mouse_check_button(mb_left) {
        image_speed = .8;
        state_ = "shooting_idle";
    }
    else{
        image_speed = .3;
    }
}

if !place_meeting(x, y+1, o_solid) {
    vspeed_ += gravity_;
    state_ = "jump";
} else {
    if keyboard_check_pressed(vk_space) {
        vspeed_ = jump_height_;
    }
    if keyboard_check(vk_down) {
        state_ = "down";
    }
}

//Collisons
move();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///instance_create_layer(x,y,"Instances",o_bullet);
if alarm[0] &lt;= 0 {
    var bullet_ = instance_create(x+(flipped_ *8),y-6,o_bullet);
    bullet_.direction = point_direction(x,y,x+flipped_,y);
    alarm[0] = bullet_cooldown_;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the player
if state_ == "move" {
    draw_sprite_ext(spr_player_running, image_index, x, y, x_scale_*flipped_, y_scale_, 0, image_blend, image_alpha);
} 
else if state_ == "jump"{
    draw_sprite_ext(spr_player_jump, image_index, x, y-9, x_scale_*flipped_, y_scale_, 0, image_blend, image_alpha);
} 
else if state_ == "down"{
    draw_sprite_ext(spr_player_down, image_index, x, y+9, x_scale_*flipped_, y_scale_, 0, image_blend, image_alpha);
} 
else if state_ == "shooting_idle"{
    draw_sprite_ext(spr_player_idle, image_index, x, y, x_scale_*flipped_, y_scale_, 0, image_blend, image_alpha);
}
else {
    draw_sprite_ext(spr_player_idle, 0, x, y, x_scale_*flipped_, y_scale_, 0, image_blend, image_alpha);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
